exports["Users/GET /admin/users/responds with 422 error when query validation fails for pagination(0)"] = {
  "message": "Invalid request queryString",
  "type": "E_INVALID_QUERY_STRING",
  "errors": [
    {
      "path": [
        "page"
      ],
      "property": "instance.page",
      "message": "does not conform to the \"positiveInteger\" format",
      "schema": {
        "type": "string",
        "format": "positiveInteger"
      },
      "instance": "one",
      "name": "format",
      "argument": "positiveInteger",
      "stack": "instance.page does not conform to the \"positiveInteger\" format"
    },
    {
      "path": [
        "pageSize"
      ],
      "property": "instance.pageSize",
      "message": "does not conform to the \"positiveInteger\" format",
      "schema": {
        "type": "string",
        "format": "positiveInteger"
      },
      "instance": "two",
      "name": "format",
      "argument": "positiveInteger",
      "stack": "instance.pageSize does not conform to the \"positiveInteger\" format"
    }
  ]
};

exports["Users/GET /admin/users/responds with 422 error when query validation fails for ordering(0)"] = {
  "message": "Invalid request queryString",
  "type": "E_INVALID_QUERY_STRING",
  "errors": [
    {
      "path": [
        "orderColumn"
      ],
      "property": "instance.orderColumn",
      "message": "is not one of enum values: id,createdAt,email",
      "schema": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "email"
        ]
      },
      "instance": "foo",
      "name": "enum",
      "argument": [
        "id",
        "createdAt",
        "email"
      ],
      "stack": "instance.orderColumn is not one of enum values: id,createdAt,email"
    },
    {
      "path": [
        "orderDirection"
      ],
      "property": "instance.orderDirection",
      "message": "is not one of enum values: asc,desc",
      "schema": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "instance": "bar",
      "name": "enum",
      "argument": [
        "asc",
        "desc"
      ],
      "stack": "instance.orderDirection is not one of enum values: asc,desc"
    }
  ]
};

exports["Users/GET /admin/users/responds with 403 error when user is not admin(0)"] = {
  "message": "The user is not allowed to access this resource",
  "type": "E_FORBIDDEN"
};

exports["Users/GET /admin/users/responds with 401 error when user is not authenticated(0)"] = {
  "message": "The user was not authorized",
  "type": "E_UNAUTHORIZED"
};

